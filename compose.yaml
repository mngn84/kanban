services:
  postgres_main:
    container_name: main_db
    image: postgres:15-alpine
    env_file:
      - main-service/.env
    ports:
      - "5431:5432"
    volumes:
      - ./volumes/postgres/main_db:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  postgres_auth:
    container_name: auth_db
    image: postgres:15-alpine
    env_file:
      - ./auth-service/.env
    ports:
      - "5433:5432" 
    volumes:
      - ./volumes/postgres/auth_db:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  main:
    container_name: main
    build: ./main-service
    command:
     >
      sh -c "
      if [ ! -f ./prisma/check_db ]; then
        npx prisma generate && npx prisma migrate deploy && npx prisma db seed && touch ./prisma/check_db;
      fi; 
      npm run start:dev;
      " 
    env_file: ./main-service/.env
    ports:
      - "3000:3000"
    volumes:
      - ./main-service/src:/app/src
    depends_on:
      rabbitmq:
        condition: service_started
      postgres_main:
        condition: service_healthy
    restart: always
    links:
      - rabbitmq
      - postgres_main

  auth:
    container_name: auth
    build: ./auth-service
    command:
     >
      sh -c "
      if [ ! -f ./prisma/check_db ]; then
        npx prisma generate && npx prisma migrate deploy && npx prisma db seed && touch ./prisma/check_db;
      fi; 
      npm run start:dev;
      "
    env_file: ./auth-service/.env
    ports:
      - "4000:4000"
    volumes:
      - ./auth-service/src:/app/src
    depends_on:
      rabbitmq:
        condition: service_started
      postgres_auth:
        condition: service_healthy
    restart: always                
    links:
      - rabbitmq
      - postgres_auth

  gateway:
    container_name: gateway
    build: ./gateway
    env_file: ./gateway/.env
    ports:
      - "5000:5000"
    volumes:
      - ./gateway/src:/app/src
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
